let - (-1, -1) -> 2
= - (-1, -1) -> 3
2 - (50, 0) -> 1
let - (-1, -1) -> 2
= - (-1, -1) -> 3
22 - (0, 0) -> 1
let - (-1, -1) -> 2
= - (-1, -1) -> 3
222 - (50, 1) -> 1
let - (-1, -1) -> 2
numbersArray - (75, 0) -> 0
= - (-1, -1) -> 3
[ - (-1, -1) -> 4
firstNumber - (69, 0) -> 0
, - (-1, -1) -> 4
secondNumber - (53, 0) -> 0
, - (-1, -1) -> 4
thirdNumber - (56, 0) -> 0
] - (-1, -1) -> 4
, - (-1, -1) -> 4
var - (-1, -1) -> 2
maximumNumber - (83, 0) -> 0
: - (-1, -1) -> 4
Int - (99, 0) -> 0
= - (-1, -1) -> 3
.min - (70, 0) -> 1
var - (-1, -1) -> 2
minimumNumber - (81, 0) -> 0
: - (-1, -1) -> 4
Int - (99, 0) -> 0
= - (-1, -1) -> 3
.max - (72, 0) -> 1
for - (27, 0) -> 0
number - (49, 0) -> 0
in - (15, 0) -> 0
numbersArray - (75, 0) -> 0
{ - (-1, -1) -> 4
if - (-1, -1) -> 2
number - (49, 0) -> 0
> - (-1, -1) -> 3
maximumNumber - (83, 0) -> 0
{ - (-1, -1) -> 4
maximumNumber - (83, 0) -> 0
= - (-1, -1) -> 3
number - (49, 0) -> 0
} - (-1, -1) -> 4
if - (-1, -1) -> 2
number - (49, 0) -> 0
< - (-1, -1) -> 3
minimumNumber - (81, 0) -> 0
{ - (-1, -1) -> 4
minimumNumber - (81, 0) -> 0
= - (-1, -1) -> 3
number - (49, 0) -> 0
} - (-1, -1) -> 4
} - (-1, -1) -> 4

